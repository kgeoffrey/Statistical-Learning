print(cov(track))
print(cor(track))
pca.cov=princomp(track,cor=F,scores=T)
pca.cor=princomp(track,cor=T,scores=T)
print(summary(pca.cov))
print(pca.cov)
print(summary(pca.cor))
print(pca.cor)
speed=track  # to allocate space and column names
speed[,1]=100/track[,1];
speed[,2]=200/track[,2];
speed[,3]=400/track[,3];
speed[,4]=800/(60*track[,4]);
speed[,5]=1500/(60*track[,5]);
speed[,6]=3000/(60*track[,6]);
speed[,7]=42195/(60*track[,7])
print(cov(speed)); print(cor(speed))
print(summary(speed))
pca2.cov=princomp(speed,cor=F,scores=T)
print(summary(pca2.cov))
print(pca2.cov)
print(cov(track))
source('~/Dropbox/School/2017W2/STAT 306/hw7_stat306.R')
x1 = c(6, 13, 31, 21)
x2 = c(22, 91, 37, 17)
table = as.table(rbind(t(x1), t(x2)))
chisqulcer<- chisq.test(table)
chisqulcer
control<-c(168.6, 33.6, 201, 236.3, 211.6, 111.4, 120.8, 241.5, 48.1, 289.5, 193.3, 209.5, 274.3, 128.6, 150.6, 285.1, 183.6, 174.5, 303.9, 216.9, 225.7, 182.2, 140.9, 33.9, 168.8, 260.1)
treatment<-c(190.8, 51.9, 224.9, 272.5, 230.6, 154.6, 160.4, 276.1, 70.4, 334.6, 216.4, 233.1, 300.6, 150.8, 208.8, 322.5, 225.4, 208.2, 334.5, 231.8, 262, 215.6, 192.7, 70.1, 208.8, 297.3)
mean(control-treatment)
mean(treatment-control)
sd(treatment-control)/sqrt(26)
deltahat=mean(treatment-control)
SD=sd(treatment-control)/sqrt(26)
CI = c(deltahat-2.0555*SD)
CI = c(deltahat-2.0555*SD, deltahat+2.0555*SD)
CI
difftest = t.test(treatment, control, alternative=c("greater"), paired=TRUE)
difftest
rm(list=ls())
rm(list=ls())
beta <- solve(((t(X)%*%X)^(-1))%*%t(X)%*%y)
## Question 1
linear <- function(y, X) {
beta <- solve(((t(X)%*%X)^(-1))%*%t(X)%*%y)
return(beta)
}
A = matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)
A
A[:,3]
A[,3]
a = c(1,2,3)
b = c(4,5,6)
data.frame(a, b)
data.frame(a, b)[sample(nrow(data.frame(a, b)), 4, replace = FALSE)]
df = data.frame(a, b)
df[sample(nrow(df), 4, replace = FALSE)]
df[sample(nrow(df), 4, replace = FALSE), ]
df[sample(nrow(df), 4), ]
df[sample(nrow(df), 2, replace = FALSE), ]
df[sample(nrow(df), 2, replace = FALSE), ]
extr<-df[sample(nrow(df), 2, replace = FALSE), ]
extr
extr<-df[sample(nrow(df), 1, replace = FALSE), ]
extr
extr[1,2]
extr[,2]
rm(list=ls())
pwd
pwd()
## Question 1
exper <- read.csv("experiment.csv")
exper <- read.table("~/Dropbox/School/2018W1/STAT_404/webwork/webwork1_stat404/exper.txt", quote="\"", comment.char="")
View(exper)
## Question 1
exper <- read.table("~/Dropbox/School/2018W1/STAT_404/webwork/webwork1_stat404/exper.txt", quote="\"", comment.char="")
control <- read.table("~/Dropbox/School/2018W1/STAT_404/webwork/webwork1_stat404/exper.txt", quote="\"", comment.char="")
View(control)
View(control)
e.meanbefore <- mean(exper[,1])
e.meanafter <- mean(exper[,2])
exper[,1]
e.meandif <- e.meanbefore - e.meanafter
e.meandif
e.dif <- e.meanbefor-e.meanafter
e.dif <- e.meanbefore-e.meanafter
e.meandif <- mean(e.dif)
e.meandif
e.difsd <- sd(e.dif)
e.difsd
e.dif <- e.meanbefore-e.meanafter
e.dif <- exper[,1]-exper[,2]
e.meandif <- mean(e.dif)
e.meandif
e.difsd <- sd(e.dif)
e.difsd
## Question 1
n <- length(exper[,1])
e.difSE <- e.difsd/sqrt(n)
e.difSE
df <- n-1
df
c.meanbefore <- mean(control[,1])
ec.meandif <- e.meanbefore-c.meanbefore
ec.meandif
e.before <- exper[,1]
e.after <- exper[,2]
c.before <- control[,1]
c.after <- control[,2]
## Question 1
n.e <- length(exper[,1])
n.c <- length(control[,1])
rm(n)
e.residbefore <- e.before-e.meanbefore
c.residbefore <- c.before-c.meanbefore
length(exper)
width(exper)
size(exper)
dim(exper)
c(n.e, a) <- dim(exper)
n.e <- dim(exper)[1]
n.c <- dim(control)[1]
n.c
a <- dim(exper)[2]
N <- a*(n.e+n.c)
n.c <- dim(control)[1]
control <- read.table("~/Dropbox/School/2018W1/STAT_404/webwork/webwork1_stat404/control.txt", quote="\"", comment.char="")
n.e <- dim(exper)[1]
n.c <- dim(control)[1]
a <- dim(exper)[2]
N <- a*(n.e+n.c)
e.before <- exper[,1]
e.after <- exper[,2]
c.before <- control[,1]
c.after <- control[,2]
e.meanbefore <- mean(exper[,1])
e.meanafter <- mean(exper[,2])
c.meanbefore <- mean(control[,1])
c.meanafter <- mean(control[,2])
e.dif <- exper[,1]-exper[,2]
e.meandif <- mean(e.dif)
e.meandif
rm(list=ls())
## Question 1
exper <- read.table("~/Dropbox/School/2018W1/STAT_404/webwork/webwork1_stat404/exper.txt", quote="\"", comment.char="")
control <- read.table("~/Dropbox/School/2018W1/STAT_404/webwork/webwork1_stat404/control.txt", quote="\"", comment.char="")
n.e <- dim(exper)[1]
n.c <- dim(control)[1]
a <- dim(exper)[2]
N <- a*(n.e+n.c)
e.before <- exper[,1]
e.after <- exper[,2]
c.before <- control[,1]
c.after <- control[,2]
e.meanbefore <- mean(exper[,1])
e.meanafter <- mean(exper[,2])
c.meanbefore <- mean(control[,1])
c.meanafter <- mean(control[,2])
e.dif <- exper[,1]-exper[,2]
e.meandif <- mean(e.dif)
e.meandif
e.difsd <- sd(e.dif)
e.difSE <- e.difsd/sqrt(n)
e.difSE
e.difSE <- e.difsd/sqrt(n.e)
e.difSE
e.residbefore <- e.before-e.meanbefore
c.residbefore <- c.before-c.meanbefore
c.difsd <- sd(c.dif)
s2 <- ((sum(e.residbefore))^2 + (sum(c.residbefore))^2)/(N-a)
e.meanbefore-c.meanbefore
s2.before <- ((sum(e.residbefore))^2 + (sum(c.residbefore))^2)/(N-a)
ec.meanbefore <- e.meanbefore-c.meanbefore
ec.SEbefore <- sqrt(s2.before)*sqrt(1/n.e+1/n.c)
ec.SEbefore
df2 <- N-a
df2
c.dif <- control[,1]-control[,2]
c.meandif <- mean(c.dif)
c.meandif
# Part 1c
teststat.1c <- e.meandif - c.meandif
# Part 1c
e.residdif <- e.dif - e.meandif
c.residdif <- c.dif - c.meandif
# Part 1c
e.residdif <- e.dif - e.meandif
c.residdif <- c.dif - c.meandif
teststat.1c <- e.meandif - c.meandif
s2.ecdif <- ((sum(e.residdif))^2+(sum(c.residdif))^2)/(N-a)
teststat.1c
ec.SEdif <- sqrt(s2.ecdif)*sqrt(1/n.e+1/n.c)
ec.SEdif <- sqrt(s2.ecdif)*sqrt(1/n.e+1/n.c)
ec.SEdif
e.dif <- e.meanbefore - e.meanafter
e.meandif <- mean(e.dif)
e.meandif
e.meanafter-e.meanbefore
e.dif <- e.before - e.after
e.meandif <- mean(e.dif)
e.meandif
t.test(e.before, e.after, paired=TRUE)
t.test(e.after, e.before, paired=TRUE)
summary(t.test(e.after, e.before, paired=TRUE))
t.test(e.after, e.before, paired=TRUE)
e.dif <- e.after - e.before
e.difsd <- sd(e.dif)
e.difSE <- e.difsd/sqrt(n.e)
e.difSE
# 1b)
t.test(e.before, c.before, var.equal=TRUE)
# 1b)
test1b <- t.test(e.before, c.before, var.equal=TRUE)
meandif1b <- abs(23.30833-20.74545)
meandif1b
se1b <- (9.682032-meandif1b)/0.4624
se1b
e.dif <- e.after - e.before
c.dif <- c.after - c.before
e.meanbefore <- mean(exper[,1])
e.meanafter <- mean(exper[,2])
c.meanbefore <- mean(control[,1])
c.meanafter <- mean(control[,2])
e.dif <- e.after - e.before
e.meandif <- mean(e.dif)
e.meandif
c.dif <- c.after - c.before
c.meandif <- mean(c.dif)
c.meandif
e.difsd <- sd(e.dif)
c.difsd <- sd(c.dif)
# 1c)
test1c <- t.test(c.dif, e.dif, alternative="two.sided", var.equal = FALSE)
test1c
meandif1c <- abs(-0.2454545 - -3.0833333)
meandif1c
se1c <- (4.7266604-meandif1c)/3.2625
se1c
# 1b)
test1b <- t.test(e.before, c.before, var.equal=TRUE)
meandif1b
test1b
qt(c(.025, .975), df=21)
se1b <- (9.682032-meandif1b)/2.079614
se1b
dt(2.160369)
pt(2.160369)
pt(2.160369, 12)
pt(2.160369, 21)
qt(c(.025, .975), df=12)
qt(c(.025, .975), df=12.38)
test1c
se1c <- (4.7266604-meandif1c)/2.160369
se1c
train <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/training.txt", quote="\"", comment.char="")
test <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/testing.txt", quote="\"", comment.char="")
rm(list=ls())
train <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/training.txt", quote="\"", comment.char="")
test <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/testing.txt", quote="\"", comment.char="")
p <- ncol(train)
ncol(test)
View(train)
View(train)
train <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/training.txt", quote="\"", comment.char="", header = TRUE)
test <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/testing.txt", quote="\"", comment.char="", header = TRUE)
null <- lm(MORT~1, data=train)
full <- lm(MORT~., data=train)
cor(train)
cor(train)
cor(train)
cor(train)
cor(train)
cor(train)
cor(train)
reduced <- lm(MORT~POOR+HC+NOX+HOUS+NONW, data=train)
k <- 5
n <- nrow(train)+nrow(test)
pr.full <- pr.reduced <- rep(0, n)
pr.full <- predict(fulltrain, newdata=test)
pr.full <- pr.reduced <- rep(0, n)
n <- nrow(train)+nrow(test)
k <- 5
for (i in 1:k) {
fulltrain <- lm(MORT~., data=train)
reducedtrain <- lm(MORT~POOR+HC+NOX+HOUS+NONW, data=train)
pr.full <- predict(fulltrain, newdata=test)
pr.reduced <- predict(partialtrain, newdata=test)
}
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
mspe_full
mspe_reduced <- mspe_full <- mean((train$MORT-pr.reduced)^2, (test$MORT-pr.reduced)^2)
mspe_full
train <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/training.txt", quote="\"", comment.char="", header = TRUE)
test <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/testing.txt", quote="\"", comment.char="", header = TRUE)
# p <- ncol(train)
# nulltrain <- lm(MORT~1, data=train)
fulltrain <- lm(MORT~., data=train)
reducedtrain <- lm(MORT~POOR+HC+NOX+HOUS+NONW, data=train)
pr.full <- predict(fulltrain, newdata=test)
pr.reduced <- predict(reducedtrain,)
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
mspe_full
mspe_reduced <- mspe_full <- mean((train$MORT-pr.reduced)^2, (test$MORT-pr.reduced)^2)
mspe_full
train <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/training.txt", quote="\"", comment.char="", header = TRUE)
test <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/testing.txt", quote="\"", comment.char="", header = TRUE)
# p <- ncol(train)
# nulltrain <- lm(MORT~1, data=train)
fulltrain <- lm(MORT~., data=train)
reducedtrain <- lm(MORT~POOR+HC+NOX+HOUS+NONW, data=train)
pr.full <- predict(fulltrain, newdata=test)
pr.reduced <- predict(reducedtrain,)
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
data <- merge(train, test)
data <- merge(train, test, by.x)
data <- merge(train, test, by.x=TRUE)
data <- merge(train, test, by.y=TRUE)
data <- merge(train, test, by.y="all")
data <- merge(train, test, by.x="all")
# p <- ncol(train)
# nulltrain <- lm(MORT~1, data=train)
fulltrain <- lm(MORT~., data=train)
reducedtrain <- lm(MORT~POOR+HC+NOX+HOUS+NONW, data=train)
pr.full <- predict(fulltrain, newdata=test)
pr.reduced <- predict(reducedtrain,)
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
mspe_full <- mean((train$MORT-pr.full)^2)
pr.reduced <- predict(reducedtrain, newdata=test)
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
mspe_full
mspe_reduced <- mspe_full <- mean((train$MORT-pr.reduced)^2, (test$MORT-pr.reduced)^2)
mspe_full
mspe_reduced
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
mspe_full
mspe_reduced <- mean((train$MORT-pr.reduced)^2, (test$MORT-pr.reduced)^2)
mspe_reduced
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
mspe_full
mspe_reduced <- mean((train$MORT-pr.reduced)^2, (test$MORT-pr.reduced)^2)
mspe_reduced
rm(list=ls())
train <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/training.txt", quote="\"", comment.char="", header = TRUE)
test <- read.table("~/Dropbox/School/2018W1/STAT_406/Code/quiz1/testing.txt", quote="\"", comment.char="", header = TRUE)
# p <- ncol(train)
# nulltrain <- lm(MORT~1, data=train)
fulltrain <- lm(MORT~., data=train)
reducedtrain <- lm(MORT~POOR+HC+NOX+HOUS+NONW, data=train)
pr.full <- predict(fulltrain, newdata=test)
pr.reduced <- predict(reducedtrain, newdata=test)
mspe_full <- mean((train$MORT-pr.full)^2, (test$MORT-pr.full)^2)
mspe_full
mspe_reduced <- mean((train$MORT-pr.reduced)^2, (test$MORT-pr.reduced)^2)
mspe_full <- mean((test$MORT - pr.full)^2)
mspe_full
mspe_reduced <- mean((test$MORT - pr.reduced)^2)
mspe_reduced
cor(train)
cor(train)[16]
cor(train)[,16]
t(cor(train)[,16])
sort(cor(train)[,16])
reduced2 <- lm(MORT~NONW+PREC+SO+POPN+DENS, data=train)
pr.reduced2 <- predict(reduced2, newdata=test)
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+PREC+SO+POPN, data=train)
pr.full <- predict(fulltrain, newdata=test)
pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
mspe_full <- mean((test$MORT - pr.full)^2)
mspe_full
mspe_reduced <- mean((test$MORT - pr.reduced)^2)
mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+PREC+SO+POPN, data=train)
# pr.full <- predict(fulltrain, newdata=test)
# pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
# mspe_full <- mean((test$MORT - pr.full)^2)
# mspe_full
# mspe_reduced <- mean((test$MORT - pr.reduced)^2)
# mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+PREC+SO, data=train)
# pr.full <- predict(fulltrain, newdata=test)
# pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
# mspe_full <- mean((test$MORT - pr.full)^2)
# mspe_full
# mspe_reduced <- mean((test$MORT - pr.reduced)^2)
# mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+PREC, data=train)
# pr.full <- predict(fulltrain, newdata=test)
# pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
# mspe_full <- mean((test$MORT - pr.full)^2)
# mspe_full
# mspe_reduced <- mean((test$MORT - pr.reduced)^2)
# mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+SO, data=train)
# pr.full <- predict(fulltrain, newdata=test)
# pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
# mspe_full <- mean((test$MORT - pr.full)^2)
# mspe_full
# mspe_reduced <- mean((test$MORT - pr.reduced)^2)
# mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+PREC+POPN, data=train)
# pr.full <- predict(fulltrain, newdata=test)
# pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
# mspe_full <- mean((test$MORT - pr.full)^2)
# mspe_full
# mspe_reduced <- mean((test$MORT - pr.reduced)^2)
# mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+PREC+DENS, data=train)
# pr.full <- predict(fulltrain, newdata=test)
# pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
# mspe_full <- mean((test$MORT - pr.full)^2)
# mspe_full
# mspe_reduced <- mean((test$MORT - pr.reduced)^2)
# mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
reduced2 <- lm(MORT~NONW+PREC+SO, data=train)
# pr.full <- predict(fulltrain, newdata=test)
# pr.reduced <- predict(reducedtrain, newdata=test)
pr.reduced2 <- predict(reduced2, newdata=test)
# mspe_full <- mean((test$MORT - pr.full)^2)
# mspe_full
# mspe_reduced <- mean((test$MORT - pr.reduced)^2)
# mspe_reduced
mspe_reduced2 <- mean((test$MORT - pr.reduced2)^2)
mspe_reduced2
mspe_full
mspe_reduced
dat <- read.table("prostate_mod-1.data")
rm(list=ls())
dat <- read.table("prostate_mod-1.data")
pwd
getwd
setwd("~/Dropbox/School/2018W1/STAT_406/Labs/lab2_stat406/")
dat <- read.table("prostate_mod-1.data")
full <- lm(lpsa~., data=dat)
summary(full)
corr(full)
corr(dat)
cor(dat)
## Question 2
full$coefficients
## Question 2
betas <- full$coefficients
y <- dat$lpsa
install.packages('glmnet')
library(glmnet)
exps = seq(from = -3, to = 3, by = 0.2)
lam = exp(exps)
?glmnet
view(dat)
dat
dim(dat)
## Question 3
X = dat[,1:dim(dat)-1]
X = dat[,1:dim(dat)[2]-1]
y = dat$lpsa
yy = dat$lpsa
View(dat)
y <- as.vector(dat$lpsa)
xm <- as.matrix(dat[, -9])
a <- glmnet(x=xm, y=y, lambda=rev(lam),family='gaussian', alpha=0)
View(a)
a <- glmnet(x=xm, y=y, lambda=lam,family='gaussian', alpha=0)
summary(a)
a
a[31]
a[[31]]
a[[,31]]
fittedobject <- glmnet(x=xm, y=y, lambda=lam,family='gaussian', alpha=0)
fittedobject$beta
fittedobject <- glmnet(x=xm, y=y, lambda=rev(lam),family='gaussian', alpha=0)
fittedobject$beta
fittedobject
fittedobject$beta[16]
fittedobject$beta[[16]]
## Question 4
set.seed(123)
tmp <- cv.glmnet(x=xm, y=y, lambda=lambdas, nfolds=5, alpha=0, family='gaussian')
## Question 4
set.seed(123)
tmp <- cv.glmnet(x=xm, y=y, lambda=lam, nfolds=5, alpha=0, family='gaussian')
## Question 4
set.seed(800)
tmp <- cv.glmnet(x=xm, y=y, lambda=lam, nfolds=5, alpha=0, family='gaussian')
plot(tmp)
lamdamin <- tmp$lambda.min
lambamin
lamdamin <- tmp$lambda.min
lambamin
lamdamin
