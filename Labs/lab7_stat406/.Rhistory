main="Residual Plot for Body Length")
abline(0,0)
width_resid <- plot(data$Width, fit$residuals,  xlab= "Wing Width",
ylab="Fitted Residuals",
main="Residual Plot for Wing Width")
abline(0,0)
fit
fit$coefficients
fit$coefficients[1]
anova_result
summary(anova_result)
anova_result <- anova(fit)
anova_result
SE <- sqrt(0.0475)/sqrt(64)
c <- qtukey(0.95, 4, 60)/sqrt(2)
SE <- sqrt(0.0475)/sqrt(64)
c <- qtukey(0.95, 4, 60)/sqrt(2)
for (i in fit$coefficients) {
print(c(i-c*SE, i+c*SE))
}
fit$coefficients
for (i in fit$coefficients) {
print(c(i-c*SE, i+c*SE))
}
for (i in fit$coefficients) {
print(c(i-c*SE, "," i+c*SE))
}
for (i in fit$coefficients) {
print(c(i-c*SE, "," i+c*SE))
}
print(c(i-c*SE, ",", i+c*SE))
for (i in fit$coefficients) {
print(toString(c(i-c*SE, ",", i+c*SE)))
}
for (i in fit$coefficients) {
print(toString(c(i-c*SE, i+c*SE)))
}
for (i in fit$coefficients) {
print(toString(c(round(i-c*SE, 5), round(i+c*SE, 5))))
}
c
SE
fit$coefficients[2]
c*SE
SE
# SE <- sqrt(0.0475)/sqrt(64)
SE <- sqrt(2*0.0475/16)
for (i in fit$coefficients) {
print(toString(c(round(i-c*SE, 5), round(i+c*SE, 5))))
}
SE
c*SE
library(agricolae)
HSD.test(fit, DFerror = 47, MSerror = 0.0475, alpha = 0.05)
fit$xlevels
fit$effects
fit$terms
fit$terms[2]
anova_result$`Mean Sq`[2]
anova_result$`Mean Sq`[16]
anova_result
anova_result$`Mean Sq`[1:15]
MSEs <- anova_result$`Mean Sq`[1:15]
means <- fit$terms[2:16]
means
means <- fit$terms[2:16]
means <- fit$terms[2:15]
means <- fit$terms[1:15]
fit$terms
fit$coefficients
means <- fit$terms[2:16]
means <- fit$coefficients[2:16]
means
dfs <- anova_result$Df[1:15]
dfs
dfA <- c(2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 16)
MSE <- anova_result$`Mean Sq`[16]
SE <- sqrt(MSE)/sqrt(64)
SE
for (i in 1:length(dfA)) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(c(round(lower, 5), round(upper, 5)))
}
for (i in 1:length(dfA)) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(c(round(lower, 5), round(upper, 5)))
}
for (i in 1:length(dfA)) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
# dfA <- c(2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 16)
dfA <- c(2, 2, 2, 2)
n <-   c(8, 8, 8, 8)
for (i in 1:length(dfA)) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 1:3) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 5:7) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i = 11) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 11) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
rm(list=ls())
#Read in both data tables
#data from sheet 2
df= read.csv("~/Downloads/Data.csv")
data = df
#data from sheet 1
data2 = read.csv('~/Downloads/Data2.csv')
data2 = data2[-1]
#change col names
names(data)[1] = 'y'
names(data)[2]= 'Weight'
names(data)[3]= 'Clip'
names(data)[4]= 'Length'
names(data)[5] = 'Width'
#y is average response used for plots
y=data2$Average
#get appropriate rows from data2
Pwidth <- y[c(1,2,3,4,9,10,11,12)]
Nwidth <- y[c(5,6,7,8,13,14,15,16)]
Pweight <- y[c(9,10,11,12,13,14,15,16)]
Nweight <- y[c(1,2,3,4,5,6,7,8)]
Pbody <- y[c(1,2,7,8,9,10,15,16)]
Nbody <- y[c(3,4,5,6,11,12,13,14)]
Pclip <- y[c(1,3,5,7,9,11,13,15)]
Nclip <- y[c(2,4,6,8,10,12,14,16)]
#initial box plots
width_plot <- boxplot(Pwidth,Nwidth, names=c('1 - Wide', '0 - Narrow'))
title(main = "Box Plot for Wing Width",  ylab = "Flight Time(s)")
weight_plot <- boxplot(Pweight, Nweight,names=c('1 - Heavy', '0 - Light'))
title(main = "Box Plot for Paper Weight", ylab = "Flight Time(s)")
body_plot <- boxplot(Pbody, Nbody,names=c('1 - Long', '0 - Short'))
title(main = "Box Plot for Body Length", ylab = "Flight Time(s)")
clip_plot <- boxplot(Pclip, Nclip,names=c('1 - Paperclip', '0 - No Paperclip'))
title(main = "Box Plot for Paperclip", ylab = "Flight Time(s)")
#interaction plots
weight_clip <- interaction.plot(data2$Weight,data2$Clip,y,type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Paper Weight Level (0 - Light, 1- Heavy)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Weight x Paperclip")
legend("topright", c("0 - No Paperclip","1 - Paperclip"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Paperclip)",inset = .02)
weight_width <-interaction.plot(data2$Weight,data2$Width,y,type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Paper Weight Level (0 - Light, 1- Heavy)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Paper Weight x Wing Width")
legend("topright", c("0 - Narrow","1 - Wide"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Wing Width)",inset = .02)
weight_body <- interaction.plot(data2$Weight,data2$Length, y, type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Paper Weight Level (0 - Light, 1- Heavy)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Paper Weight x Body Length")
legend("topright", c("0 - Short","1 - Long"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Body Length)",inset = .02)
body_clip <- interaction.plot(data2$Length,data2$Clip,y ,type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Body Length Level (0 - Short, 1- Long)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Length x Paperclip")
legend("right", c("0 - No Paperclip","1 - Paperclip"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Paperclip)",inset = .02)
body_width <- interaction.plot(data2$Length,data2$Width,y, type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Body Length Level (0 - Short, 1- Long)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Length x Wing Width")
legend("bottomright", c("0 - Narrow","1 - Wide"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Wing Width)",inset = .02)
width_clip <- interaction.plot(data2$Width,data2$Clip,y, type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Wing Width Level (0 - Narrow, 1- Wide)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Length x Paperclip")
legend("right", c("0 - No Paperclip","1 - Paperclip"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Paper Clip)",inset = .02)
#ANOVA model
fit <- lm(data$y ~ data$Weight*data$Clip*data$Length*data$Width)
anova_result <- anova(fit)
anova_result
#Get qq plot
plot(fit)
redid_fit <- plot(data$y,fit$residuals,  xlab= "Avg. Flight Time (s)",
ylab="Fitted Residuals",
main="Residual Plot for Avg. Flight Time")
abline(0,0)
weight_resid <- plot(data$Weight,fit$residuals,  xlab= "Paper Weight",
ylab="Fitted Residuals",
main="Residual Plot for Weight")
abline(0,0)
clip_reid <- plot(data$Clip, fit$residuals,  xlab= "Paperclip",
ylab="Fitted Residuals",
main="Residual Plot for Paperclip")
abline(0,0)
length_resid <- plot(data$Length, fit$residuals,  xlab= "Body Length",
ylab="Fitted Residuals",
main="Residual Plot for Body Length")
abline(0,0)
width_resid <- plot(data$Width, fit$residuals,  xlab= "Wing Width",
ylab="Fitted Residuals",
main="Residual Plot for Wing Width")
abline(0,0)
fit$coefficients
# SE <- sqrt(0.0475)/sqrt(64)
# SE <- sqrt(0.0475/16)
# c <- qtukey(0.95, 4, 60)/sqrt(2)
for (i in fit$coefficients) {
print(toString(c(round(i-c*SE, 5), round(i+c*SE, 5))))
}
SE
c*SE
means <- fit$coefficients[2:16]
means
MSE <- anova_result$`Mean Sq`[16]
# dfA <- c(2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 16)
dfA <- c(2, 2, 2, 2)
n <-   c(8, 8, 8, 8)
SE <- sqrt(MSE)/sqrt(64)
SE
for (i in 1:3) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 5:7) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 11) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
means
means <- means*2
means
for (i in 1:3) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 5:7) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 11) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
qtukey(0.95, 2, 47)
SE
means[1]
rm(list=ls())
#Read in both data tables
#data from sheet 2
df= read.csv("~/Downloads/Data.csv")
data = df
#data from sheet 1
data2 = read.csv('~/Downloads/Data2.csv')
data2 = data2[-1]
#change col names
names(data)[1] = 'y'
names(data)[2]= 'Weight'
names(data)[3]= 'Clip'
names(data)[4]= 'Length'
names(data)[5] = 'Width'
#y is average response used for plots
y=data2$Average
#get appropriate rows from data2
Pwidth <- y[c(1,2,3,4,9,10,11,12)]
Nwidth <- y[c(5,6,7,8,13,14,15,16)]
Pweight <- y[c(9,10,11,12,13,14,15,16)]
Nweight <- y[c(1,2,3,4,5,6,7,8)]
Pbody <- y[c(1,2,7,8,9,10,15,16)]
Nbody <- y[c(3,4,5,6,11,12,13,14)]
Pclip <- y[c(1,3,5,7,9,11,13,15)]
Nclip <- y[c(2,4,6,8,10,12,14,16)]
#initial box plots
width_plot <- boxplot(Pwidth,Nwidth, names=c('1 - Wide', '0 - Narrow'))
title(main = "Box Plot for Wing Width",  ylab = "Flight Time(s)")
weight_plot <- boxplot(Pweight, Nweight,names=c('1 - Heavy', '0 - Light'))
title(main = "Box Plot for Paper Weight", ylab = "Flight Time(s)")
body_plot <- boxplot(Pbody, Nbody,names=c('1 - Long', '0 - Short'))
title(main = "Box Plot for Body Length", ylab = "Flight Time(s)")
clip_plot <- boxplot(Pclip, Nclip,names=c('1 - Paperclip', '0 - No Paperclip'))
title(main = "Box Plot for Paperclip", ylab = "Flight Time(s)")
#interaction plots
weight_clip <- interaction.plot(data2$Weight,data2$Clip,y,type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Paper Weight Level (0 - Light, 1- Heavy)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Weight x Paperclip")
legend("topright", c("0 - No Paperclip","1 - Paperclip"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Paperclip)",inset = .02)
weight_width <-interaction.plot(data2$Weight,data2$Width,y,type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Paper Weight Level (0 - Light, 1- Heavy)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Paper Weight x Wing Width")
legend("topright", c("0 - Narrow","1 - Wide"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Wing Width)",inset = .02)
weight_body <- interaction.plot(data2$Weight,data2$Length, y, type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Paper Weight Level (0 - Light, 1- Heavy)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Paper Weight x Body Length")
legend("topright", c("0 - Short","1 - Long"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Body Length)",inset = .02)
body_clip <- interaction.plot(data2$Length,data2$Clip,y ,type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Body Length Level (0 - Short, 1- Long)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Length x Paperclip")
legend("right", c("0 - No Paperclip","1 - Paperclip"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Paperclip)",inset = .02)
body_width <- interaction.plot(data2$Length,data2$Width,y, type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Body Length Level (0 - Short, 1- Long)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Length x Wing Width")
legend("bottomright", c("0 - Narrow","1 - Wide"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Wing Width)",inset = .02)
width_clip <- interaction.plot(data2$Width,data2$Clip,y, type="b", col=c("red","blue"), legend=F,
lty=c(2,1), lwd=2, pch=c(18,24),
xlab="Wing Width Level (0 - Narrow, 1- Wide)",
ylab="Avg. Flight Time (s)",
main="Interaction Plot for Body Length x Paperclip")
legend("right", c("0 - No Paperclip","1 - Paperclip"),
bty="n",lty=c(1,2),lwd=2,pch=c(18,24),
col=c("red","blue"), title="Legend (Paper Clip)",inset = .02)
#ANOVA model
fit <- lm(data$y ~ data$Weight*data$Clip*data$Length*data$Width)
anova_result <- anova(fit)
anova_result
#Get qq plot
plot(fit)
redid_fit <- plot(data$y,fit$residuals,  xlab= "Avg. Flight Time (s)",
ylab="Fitted Residuals",
main="Residual Plot for Avg. Flight Time")
abline(0,0)
weight_resid <- plot(data$Weight,fit$residuals,  xlab= "Paper Weight",
ylab="Fitted Residuals",
main="Residual Plot for Weight")
abline(0,0)
clip_reid <- plot(data$Clip, fit$residuals,  xlab= "Paperclip",
ylab="Fitted Residuals",
main="Residual Plot for Paperclip")
abline(0,0)
length_resid <- plot(data$Length, fit$residuals,  xlab= "Body Length",
ylab="Fitted Residuals",
main="Residual Plot for Body Length")
abline(0,0)
width_resid <- plot(data$Width, fit$residuals,  xlab= "Wing Width",
ylab="Fitted Residuals",
main="Residual Plot for Wing Width")
abline(0,0)
fit$coefficients
# SE <- sqrt(0.0475)/sqrt(64)
# SE <- sqrt(0.0475/16)
# c <- qtukey(0.95, 4, 60)/sqrt(2)
for (i in fit$coefficients) {
print(toString(c(round(i-c*SE, 5), round(i+c*SE, 5))))
}
SE
c*SE
means <- fit$coefficients[2:16]
means <- means*2
means
MSE <- anova_result$`Mean Sq`[16]
# dfA <- c(2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 16)
dfA <- c(2, 2, 2, 2)
n <-   c(8, 8, 8, 8)
SE <- sqrt(MSE)/sqrt(64)
SE
for (i in 1:3) {
c <- qtukey(0.95, dfA[i], 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 5:7) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
for (i in 11) {
c <- qtukey(0.95, 2, 47)
lower <- means[i]-c*SE
upper <- means[i]+c*SE
print(toString(c(round(lower, 5), round(upper, 5))))
}
fit$coefficients
rm(list=ls())
A <- matrix(c(1, -2, 0, 1, -2, -1, 1, 1, -1), nrow = 3, ncol = 3)
A
y <- c(2, 0, 0)
x <- c(0, 4, 0)
c <- c(1, 2, 1)
b <- c(4, -1, -2)
w <- t(A)%*%y - c
w
a1 <- A[1, :]
a1 <- A[1,]
cstar <- y[1]*a1-w
cstar
t(A)
A*x
v <- b - A*x
v
v <- b - A*t(x)
v <- b - A%*%x
v
t(A)%*%y
w
rm(list=ls())
A <- matrix(c(3/2, 1/2, 0, 1, 1, 1), nrow = 2, ncol = 3)
A
solve(A)
rref(A)
library(pracma)
rref(A)
b <- rref(A)[,3]
rm(b)
u <- rref(A)[,3]
B <- matrix(c(1, 0, 1, 2, u), nrow = 2, ncol = 3)
y <- rref(B)[,3]
A
u2 <- c(1/3, 1)
u2
u2 <- t(c(1/3, 1))
u2 <- t(c(1/3, 1))
us
u2
u2 <- c(1/3, 1)
rm(list = ls())
setwd("~/Dropbox/School/2018W1/STAT_406/Labs/lab7_stat406/")
data <- read.csv("iris.txt", sep = ",", header = TRUE)
library(rpart)
set.seed(800)
myc  <-  rpart.control(minsplit=3, cp=1e-8)
tree  <- rpart(y ~ sepal + petal, data=data, method= 'class', control=myc)
plot(tree)
x1 <- c(4.9, 5.3)
x2 <- c(5.9, 4.8)
newgrid <- expand.grid(x1, x2)
names(newgrid) <- c("sepal", "petal")
View(data)
pr.new <- predict(tree, newdata = newgrid)$posterior
pr.new <- predict(tree, newdata = newgrid)
pr.new$posterior
pr.new <- predict(tree, newdata = newgrid)$posterior
pr.new <- predict(tree, newdata = newgrid, type = 'prob')$posterior
pr.new <- predict(tree, newdata = newgrid, type = 'prob')
pre
pr.new
pr.new <- predict(tree, newdata = newgrid, type = 'class')
pr.new
pr.new
pr.new <- predict(tree, newdata = newgrid, type = 'prob')
pr.new
